console.log('TASK #1');

//Задание
/*
1) С помощью цикла while вывести все простые числа в промежутке от 0 до 100
*/

var i = 2;
var j = 2;
var n = 100;

while (i <= n) {
    while (j < i) {
        if (i % j == 0) {
            break;
        } else {
            console.log(i);
            break;
        }
        j++;
    }
    i++;
}

console.log('TASK #2');

//Задание
/*
2) С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
0 – это ноль
1 – нечетное число
2 – четное число
3 – нечетное число
*/

//Решение

function task_2(number, numbers) { //объявляем функцию с переменными обозанчающими начальное число цикла и условие выхода
    do { //тело цикла
        if (number % 2 !== 0) { //условие проверки на нечетность
            console.log(number + ' — нечетное число');
        }
        else if (number !== 0 && number % 2 === 0) { //условие проверки на четность
            console.log(number + ' — четное число');
        }
        else { //условие вывода нуля
            console.log(number + ' — это ноль');
        }
        number++; //счетчик
    } while (number <= numbers); //постусловие с переменными из функции
}

task_2(2, 12); // вызов функции с аргументами



console.log('TASK #3');

//Задание
/*
3) * Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла.
То есть выглядеть должно вот так:
for(…){// здесь пусто}
*/

//Решение

for (var i = 0; i <= 9; console.log(i++)) {//объявляем цикл for с условием вывода счетчика сразу в консоль
    //пустое тело
}


console.log('TASK #4');

//Задание
/*
4) * Нарисовать пирамиду с помощью console.log, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5:

x
xx
xxx
xxxx
xxxxx
*/

//Решение

function piramide(columns) { //объявляем функцию с параметром количества рядов в пирамиде
    var x = ''; //объявляем пустую строковую переменную
    for (var i = 0; i <= columns; i++) { //задаем цикл для построения введенных вызовом функции рядов пирамиды
        console.log(x); // выводим ряд пирамиды
        x = x + 'x'; //присваиваем пустой строке каждую итерацию символ х
    }
}

piramide(10); //вызов функции с аргументом количества рядов пирамиды


console.log('TASK #5');

//Задание
/*
5) * Начиная с этого урока, мы начинаем работать с функционалом одностраничного интернет-магазина.
Предположим, что у нас есть сущность корзины. Нужно реализовать функционал подсчета стоимости корзины в зависимости от находящихся в ней товаров.
Товары в корзине хранятся в массиве (пока в виде чисел, которые равны стоимости товара).
5.1) Организуйте такой массив для хранения товаров в корзине
5.2) Организуйте функцию countBasketPrice (или иное название), которая будет считать стоимость корзины.
*/

//Решение

let basket = [100, 200, 300, 400];
let countBasketPrice = 0;

for (var i = 0; i <= basket.length - 1; i++) {
    countBasketPrice += basket[i];

}

console.log(countBasketPrice);